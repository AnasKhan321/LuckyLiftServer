// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User{
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String
  profilepicture String?
  votes  Vote[]
  balance  Int  @default(1000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Event{



  id Int @id @default(autoincrement())

  Team1  String 
  Team2  String 
  Status  Status @default(Ongoing)
  Venue   String
  ResultUrl  String @unique
  Description String?
  eventDate   DateTime 
  votes   Vote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}


enum Status{

  Ongoing 
  Completed

}

model Vote {
  id Int @id @default(autoincrement())
  eventId Int
  userid  Int  
  event  Event  @relation(fields: [eventId], references: [id])
  user   User @relation(fields : [userid] , references  : [id])
  amount Int 
  predicted Predicted 
  status    votestatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

enum Predicted{

  ONE 
  TWO

}


enum votestatus {
  PENDING 
  WON 
  LOST 
}


